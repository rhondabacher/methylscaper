#!/bin/sh

# Get a list of staged `.R` and `.Rmd` files
staged_files_for_styling=$(git diff --cached --name-only --diff-filter=d | grep -E '\.R$|\.Rmd$')

# Run R script for pre-commit checks
Rscript -e '{
    # Function to install missing packages
    install_if_missing <- function(pkg) {
        if (!requireNamespace(pkg, quietly = TRUE)) {
            if (pkg %in% c("biocthis", "BiocCheck", "rmarkdown")) {
                BiocManager::install(pkg)
            } else {
                install.packages(pkg, repos = "https://cran.r-project.org")
            }
        }
    }

    # Check if BiocManager is installed, install if not
    if (!requireNamespace("BiocManager", quietly = TRUE)) {
        install.packages("BiocManager", repos = "https://cran.r-project.org")
    }

    # Load BiocManager before installing packages
    library("BiocManager")

    # List of required packages
    required_packages <- c("biocthis", "styler", "BiocCheck", "devtools", "rmarkdown")

    # Install missing packages
    sapply(required_packages, install_if_missing)

    # Load necessary libraries
    library("biocthis")
    library("styler")
    library("BiocCheck")
    library("devtools")
    library("rmarkdown")

    # Set the working directory to the project root
    pkg_path <- getwd()

    # Style only the staged files passed as arguments
    lapply(commandArgs(trailingOnly = TRUE), function(file) {
        styler::style_file(file, transformers = biocthis::bioc_style())
    })

    # Run BiocCheck with no-check-bioc-views and no-check-bioc-help arguments
    BiocCheck::BiocCheck(pkg_path, `no-check-bioc-views` = TRUE, `no-check-bioc-help` = TRUE)

    # Check if Pandoc is available
    if (!rmarkdown::pandoc_available()) {
        message("Pandoc not available. Skipping vignette building.")
        build_vignettes <- FALSE
    } else {
        build_vignettes <- TRUE
    }

    # Check if package is valid using CRAN:
    devtools::check(error_on = "never", vignettes = build_vignettes)
}' $staged_files_for_styling

# Check the exit status
if [ $? -ne 0 ]; then
    echo "Pre-commit checks failed. Commit aborted."
    exit 1
fi

# Check if there are any staged files for styling
if [ -n "$staged_files_for_styling" ]; then
    # Stage the formatted files again
    echo "Staging the following formatted files:"
    echo "$staged_files_for_styling"
    git add $staged_files_for_styling
else
    echo "No files to stage."
fi

# Allow the commit to proceed